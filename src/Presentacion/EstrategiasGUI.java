/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.ContenedorEstrategia;
import Logica.Estrategia;
import Logica.Horario;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David-PC
 */
public class EstrategiasGUI extends javax.swing.JPanel {

    PrincipalGUI principal;
    ContenedorEstrategia contenedorEstrategia;
    
    public EstrategiasGUI(PrincipalGUI p) {
        principal=p;
        initComponents();
        
        contenedorEstrategia =new ContenedorEstrategia();
        
    }
    public void filtrarEstrategias(){
        
         for(int i=0;i<contenedorEstrategia.getEstrategias().size();i++){
             System.out.println(contenedorEstrategia.getEstrategias().get(i).server+" "+serverTF.getText());
             if(!contenedorEstrategia.getEstrategias().get(i).server.equals(serverTF.getText())){
                 contenedorEstrategia.getEstrategias().remove(i);
                 i--;
             }
         }
    }
    public void cargarArchivo(){
        try
        {
           FileInputStream fileIn = new FileInputStream("strategies.txt");
           ObjectInputStream in = new ObjectInputStream(fileIn);
           ContenedorEstrategia cla;
           cla = (ContenedorEstrategia) in.readObject();
           if(cla!=null){
               contenedorEstrategia = cla;
           }
           in.close();
           fileIn.close();
        }catch(  IOException | ClassNotFoundException i)
        {
           i.printStackTrace();
        }
    }
    
    public void guardarArchivo(){
        try {
            FileOutputStream fileOut = new FileOutputStream("strategies.txt");
            ObjectOutputStream out = new ObjectOutputStream(fileOut);

            out.writeObject(contenedorEstrategia);
           
            out.close();
            fileOut.close();
            System.out.printf("Serialized data is saved in strategies.txt");
        } catch (IOException i) {
            i.printStackTrace();
        }

    }

    public JTextField getServerTF() {
        return serverTF;
    }
    
    public ContenedorEstrategia getContenedorEstrategia() {
        return contenedorEstrategia;
    }
    
    public PrincipalGUI getPrincipal() {
        return principal;
    }
    public void cargarTabla(){
        
        //borra toda la tabla primero
        for(int i=0;i<((DefaultTableModel)estrategyT.getModel()).getRowCount();){
            ((DefaultTableModel)estrategyT.getModel()).removeRow(i);
        }
        
        //agrega lo que haya en el arraylist
        for(int i=0;i<contenedorEstrategia.getEstrategias().size();i++){
            Estrategia c = contenedorEstrategia.getEstrategias().get(i);
            String file = c.getFile();
            String name = c.getNombre();
            String status = c.isEstatus()?"Active":"Inactive";
            boolean fullBackup = c.isFullBackup();
            boolean archive = c.isArchive();
            boolean used = c.isUsado();
            //ArrayList<String> ts = c.getTablespaces();
            ArrayList<Horario> hs = c.getHorarios();
            
            String backup = "";
            if(fullBackup){
               backup="Full Backup"; 
            }
            else{
               backup = "Partial";
            }
            if(c.incremental){
                backup+=" Incremental";
            }
            String horarios="";
            if(hs.size()>0){
                horarios+=hs.get(0).getDia();
                for(int j=1;j<hs.size();j++){
                    horarios+=","+hs.get(j).getDia();
                }
            }
            ((DefaultTableModel)estrategyT.getModel()).addRow(new Object[]{name,file,backup,horarios,status});
        }        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        estrategyT = new javax.swing.JTable();
        newBoton = new javax.swing.JButton();
        viewBoton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        serverTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jLabel1.setText("Strategies");

        estrategyT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Strategy", "RMAN File", "Type", "Schedule", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(estrategyT);
        estrategyT.getColumnModel().getColumn(0).setPreferredWidth(150);
        estrategyT.getColumnModel().getColumn(1).setPreferredWidth(150);
        estrategyT.getColumnModel().getColumn(2).setPreferredWidth(150);
        estrategyT.getColumnModel().getColumn(3).setPreferredWidth(150);
        estrategyT.getColumnModel().getColumn(4).setPreferredWidth(50);

        newBoton.setText("New");
        newBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBotonActionPerformed(evt);
            }
        });

        viewBoton.setText("View");
        viewBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBotonActionPerformed(evt);
            }
        });

        jButton3.setText("Log");

        jButton4.setText("Change Status");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        serverTF.setEditable(false);
        serverTF.setText("Unknow");

        jLabel5.setText("Server");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(serverTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(serverTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newBoton)
                    .addComponent(viewBoton)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBotonActionPerformed
        CrearEditarEstrategiaGUI es = new CrearEditarEstrategiaGUI(this);
        es.setVisible(true);
    }//GEN-LAST:event_newBotonActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    private void viewBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBotonActionPerformed
        int index = estrategyT.getSelectedRow();
        if(index>=0){
            
            String est = (String)estrategyT.getModel().getValueAt(index, 0);
            Estrategia e = null;
            for(int i=0;i<contenedorEstrategia.getEstrategias().size();i++){
                if(contenedorEstrategia.getEstrategias().get(i).getNombre().equals(est)){
                    e = contenedorEstrategia.getEstrategias().get(i);
                    break;
                }
            }
            if(e!=null){
                VerEstrategiaGUI v = new VerEstrategiaGUI(e.inFile,e.server);
                v.setVisible(true);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Select a strategy", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_viewBotonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        int index = estrategyT.getSelectedRow();
        if(index>=0){
            String nombre = (String)estrategyT.getModel().getValueAt(index,0);
            for(int i=0;i<contenedorEstrategia.getEstrategias().size();i++){
                if(contenedorEstrategia.getEstrategias().get(i).getNombre().equals(nombre)){
                    boolean status = contenedorEstrategia.getEstrategias().get(i).isEstatus();
                    if(status){
                        contenedorEstrategia.getEstrategias().get(i).setEstatus(false);
                        estrategyT.getModel().setValueAt("Inactive", index, 4);
                    }
                    else{
                        contenedorEstrategia.getEstrategias().get(i).setEstatus(true);
                        estrategyT.getModel().setValueAt("Active", index, 4);
                    }
                    guardarArchivo();
                    break;
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Select a strategy", "Error", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable estrategyT;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newBoton;
    private javax.swing.JTextField serverTF;
    private javax.swing.JButton viewBoton;
    // End of variables declaration//GEN-END:variables
}
